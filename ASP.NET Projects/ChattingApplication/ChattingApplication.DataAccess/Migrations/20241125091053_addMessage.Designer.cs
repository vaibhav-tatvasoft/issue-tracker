// <auto-generated />
using System;
using ChattingApplication.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChattingApplication.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241125091053_addMessage")]
    partial class addMessage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChattingApplication.Models.Group", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("groupAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lastMessageTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ChattingApplication.Models.Message", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Groupid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("groupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isRead")
                        .HasColumnType("bit");

                    b.Property<string>("timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Groupid");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChattingApplication.Models.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Groupid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Groupid1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Groupid");

                    b.HasIndex("Groupid1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChattingApplication.Models.Group", b =>
                {
                    b.HasOne("ChattingApplication.Models.User", "createdByUser")
                        .WithMany()
                        .HasForeignKey("createdBy");

                    b.Navigation("createdByUser");
                });

            modelBuilder.Entity("ChattingApplication.Models.Message", b =>
                {
                    b.HasOne("ChattingApplication.Models.Group", null)
                        .WithMany("messages")
                        .HasForeignKey("Groupid");
                });

            modelBuilder.Entity("ChattingApplication.Models.User", b =>
                {
                    b.HasOne("ChattingApplication.Models.Group", null)
                        .WithMany("isTyping")
                        .HasForeignKey("Groupid");

                    b.HasOne("ChattingApplication.Models.Group", null)
                        .WithMany("members")
                        .HasForeignKey("Groupid1");
                });

            modelBuilder.Entity("ChattingApplication.Models.Group", b =>
                {
                    b.Navigation("isTyping");

                    b.Navigation("members");

                    b.Navigation("messages");
                });
#pragma warning restore 612, 618
        }
    }
}
